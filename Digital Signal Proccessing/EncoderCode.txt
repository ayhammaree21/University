import matplotlib.pyplot as plt
import numpy
import re
import numpy as np
from scipy import signal
from scipy.io import wavfile
import pyaudio

Fs=8000
t=numpy.arange(0,320)
charFreq=[['a',400,800,1600],
                     ['b',400,800,2400],
                     ['c',400,800,4000],
                     ['d',400,1200,1600],
                     ['e',400,1200,2400],
                     ['f',400,1200,4000],
                     ['g',400,2000,1600],
                     ['h',400,2000,2400],
                     ['i',400,2000,4000],
                     ['j',600,800,1600],
                     ['k',600,800,2400],
                     ['l',600,800,4000],
                     ['m',600,1200,1600],
                     ['n',600,1200,2400],
                     ['o',600,1200,4000],
                     ['p',600,2000,1600],
                     ['q',600,2000,2400],
                     ['r',600,2000,4000],
                     ['s',1000,800,1600],
                     ['t',1000,800,2400],
                     ['u',1000,800,4000],
                     ['v',1000,1200,1600],
                     ['w',1000,1200,2400],
                     ['x',1000,1200,4000],
                     ['y',1000,2000,1600],
                     ['z',1000,2000,2400],
                     [' ',1000,2000,4000]]


while (True):
    print("Please Enter a string (words separated by space only): ")
    s = input(str())

    x = re.findall("[^a-zA-Z ]", s)

    if x or s == "":
        print("Your input is not correct")
        continue
    else:
        break



encode_string =[]
t1 = np.arange(0,320*len(s),1)

for i in range(0,len(s)) :

    for j in range(len(charFreq)):
        if(charFreq[j][0]==s[i]):
            encode_string.append(np.cos(2 * np.pi * 100 * t / Fs) + np.cos(2 * np.pi * charFreq[j][1] * t / Fs) + np.cos(
                2 * np.pi * charFreq[j][2] * t / Fs) + np.cos(2 * np.pi * charFreq[j][3] * t / Fs))
        elif(charFreq[j][0].upper()==s[i]):
            encode_string.append(np.cos(2 * np.pi * 200 * t / Fs) + np.cos(2 * np.pi * charFreq[j][1] * t / Fs) + np.cos(
                2 * np.pi * charFreq[j][2] * t / Fs) + np.cos(2 * np.pi * charFreq[j][3] * t / Fs))


allstring =[]
for i in encode_string :
  for j in i :
     allstring.append(j)


fs = 8000
duration = 320
allstring=numpy.array(allstring)
wavfile.write('test.wav',fs,allstring)


sample_rate, samples = wavfile.read('test.wav')
frequencies, times, spectrogram = signal.spectrogram(samples, sample_rate)
p = pyaudio.PyAudio()
stream = p.open(format=pyaudio.paFloat32,
               channels=1,
               rate=sample_rate,
               output=True)

stream.write(samples)
stream.stop_stream()
stream.close()
p.terminate()


print("The wave is saved in (test.wave)\nThank you :)")