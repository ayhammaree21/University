;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Wed Jul 26 2023
; Processor: PIC16F84A
; Compiler:  MPASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================

#include p16f84a.inc                ; Include register definition file

;====================================================================
; VARIABLES
;====================================================================


 ;====================================================================
;initialization
 ;====================================================================

		init:

              BANKSEL  TRISA
			  CLRF TRISA     	    

			   BANKSEL  PORTA
			   CLRF PORTA

               BANKSEL TRISD   
			   BCF TRISD, 2

               BANKSEL PORTD
               BCF PORTD,2
                

                BANKSEL TRISB
				BSF TRISB ,TRISB0

               BANKSEL  PORTA
               CLRF  TMR0

              BANKSEL  PORTA
              MOVLW 	0x32
			  MOVWF	counter2Sec	

                BANKSEL  OPTION_REG
                MOVLW	0x47
			   MOVWF	OPTION_REG

             BANKSEL  INTCON
              BSF INTCON , GIE
             BSF INTCON  , INTE
              BSF INTCON, TMR0IE


			  CLRF	flagCounter	
              CLRF flagPrintNum				

					GOTO  Start
					
					
					
					
 ;====================================================================
;Interupt
 ;====================================================================

        INCLUDE  "LCDIS_PORTA.INC"
		ISR:

					   BANKSEL  INTCON
					   BTFSS INTCON, TMR0IF
					  GOTO Check_External_Interrupt ;

												BANKSEL  INTCON
												BCF INTCON, TMR0IE 
												BCF INTCON,TMR0IF

												BANKSEL  PORTA
												DECFSZ   counter2Sec
												GOTO endISR
												GOTO setFlag

										setFlag:

														BANKSEL PORTA
														MOVLW 	0x32
														MOVWF	counter2Sec
														MOVLW 	0x01
													    MOVWF	flagCounter	
														BANKSEL PORTD
														BCF PORTD,2
													   

										endISR: 
          
														BANKSEL  PORTA
														CLRF  TMR0
														BANKSEL  INTCON
														BSF INTCON, TMR0IE 
														BANKSEL  PORTA
														retfie


			Check_External_Interrupt:

								 BANKSEL  INTCON
								 BTFSS INTCON, INTF
								 retfie

								BANKSEL  INTCON
								BCF INTCON, INTE 
								BCF INTCON,INTF


								BANKSEL PORTD
								BSF PORTD,2
							   
								BANKSEL  PORTA
								INCF temp

								BANKSEL  PORTA
								MOVLW 	0x32
								MOVWF	counter2Sec
							 
								BANKSEL  PORTA
								MOVLW 	0x01
								MOVWF	flagPrintNum  	

								BANKSEL  INTCON	
								BSF INTCON, INTE   
								BANKSEL  PORTA

  
				  retfie
				  
PCL	EQU	002		; Program Counter
PORTD	EQU	008		; 3x4 keypad

TRISC	EQU	087		; Data direction
TRISD	EQU	088		; registers

Key	EQU	020		; Count of keys

; Initialise ports.........................................

	BANKSEL	TRISC		; Display
	CLRW			; all outputs
	MOVWF	TRISC		; 
	MOVLW	B'00000111'	; Keypad
	MOVWF	TRISD		; bidirectional

	BANKSEL	PORTC		; Display off
	CLRF	PORTC		; initially
	GOTO	main		; jump to main

; Check a row of keys .....................................

row	INCF	Key		; Count first key
	BTFSS	PORTD,0		; Check key
	GOTO	found		; and quit if on

	INCF	Key		; and repeat
	BTFSS	PORTD,1		; for second 
	GOTO	found		; key

	INCF	Key		; and repeat
	BTFSS	PORTD,2		; for third
	GOTO	found		; key
	GOTO	next		; go for next row

; Scan the keypad..........................................

scan	CLRF	Key		; Zero key count 
	BSF	3,0		; Set Carry Flag 
	BCF	PORTD,4		; Select first row
newrow	GOTO	row		; check row

next	BSF	PORTD,3		; Set fill bit
	RLF	PORTD		; Select next row
	BTFSC	3,0		; 0 into carry flag?
	GOTO	newrow		; if not, next row
	GOTO	scan		; if so, start again

found	RETURN			; quit with key count

; Display code table.......................................

table	MOVF	Key,W		; Get key count
	ADDWF	PCL		; and calculate jump
	NOP			; into table 
	RETLW	B'00001100'	; Code for '1'
	RETLW	B'10110110'	; Code for '2'
	RETLW	B'10011110'	; Code for '3'
	RETLW	B'11001100'	; Code for '4'
	RETLW	B'11011010'	; Code for '5'
	RETLW	B'11111000'	; Code for '6'
	RETLW	B'00001110'	; Code for '7'	
	RETLW	B'11111110'	; Code for '8'
	RETLW	B'11001110'	; Code for '9'
	RETLW	B'10010010'	; Code for '*'
	RETLW	B'01111110'	; Code for '0'
	RETLW	B'11101100'	; Code for '#'
				  
					
					
					

      
    DisplayS1Length:

					  MOVLW  'L'
					  BSF Select , RS
					  CALL send
					 MOVLW  'e'
					  CALL send
					   MOVLW  'n'
					  CALL send
					 MOVLW  'g'
					  CALL send
					 MOVLW  't'
					  CALL send
					 MOVLW  'h'
					  CALL send
					 MOVLW  'S'
					  CALL send
					 MOVLW  '1'
					  CALL send
					 
					 
					 RETURN	
      
  DisplayS2Length:

					  MOVLW  'L'
					  BSF Select , RS
					  CALL send
					 MOVLW  'e'
					  CALL send
					   MOVLW  'n'
					  CALL send
					 MOVLW  'g'
					  CALL send
					 MOVLW  't'
					  CALL send
					 MOVLW  'h'
					  CALL send
					 MOVLW  'S'
					  CALL send
					 MOVLW  '2'
					  CALL send
					 
					 
					 RETURN	
			

; Read keypad & display....

main	MOVLW	0FF		; Set all outputs 
	MOVWF	PORTD		; to keypad high
	CALL	scan		; Get key number
	CALL	show		; and dsiplay it
	GOTO	main		; and repeat
	END			


;====================================================================
      END
